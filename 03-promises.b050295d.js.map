{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAClCC,MAAOF,SAASC,cAAc,6BAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAuBjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQL,EAAUJ,GAElBU,EAAON,EAAUJ,EAAM,GAExBA,EAAM,G,CA7BbJ,EAAKC,UAAUe,iBAAiB,UAEhC,SAA2BC,GACzBA,EAAMC,iBAEN,IAAIC,EAAaC,OAAOpB,EAAKI,MAAMiB,OAC/BC,EAAYF,OAAOpB,EAAKK,KAAKgB,OAC7BE,EAAiBH,OAAOpB,EAAKM,OAAOe,OAExC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAgBC,GAAK,EAExCjB,EAAciB,EAAGL,GACdM,MAAK,CAACjB,EAAUJ,IAAUN,EAAA4B,OAAOC,QAAQ,qBAAqBH,QAAQpB,SACtEwB,OAAM,CAACpB,EAAUJ,IAAUN,EAAA4B,OAAOG,QAAQ,oBAAoBL,QAAQpB,SAEzEe,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix\";\n\nconst refs = {\n  submitBtn: document.querySelector('.form'),\n  delay: document.querySelector('.form input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.submitBtn.addEventListener('submit', handledFormSubmit);\n\nfunction handledFormSubmit(event) {\n  event.preventDefault();\n  \n  let firstDelay = Number(refs.delay.value);\n  let stepDelay = Number(refs.step.value);\n  let amountPromises = Number(refs.amount.value);\n  \n  for (let i = 1; i <= amountPromises; i += 1) {\n    \n    createPromise(i, firstDelay)\n      .then((position, delay) => Notify.success(`Fulfilled promise ${i} in ${delay}ms`))\n      .catch((position, delay) => Notify.failure(`Rejected promise ${i} in ${delay}ms`));\n    \n    firstDelay += stepDelay;\n    \n  };\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position, delay);\n      } else {\n        reject(position, delay);\n      }\n    }, delay);\n  });\n  return promise;\n};\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","value","stepDelay","amountPromises","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b050295d.js.map"}